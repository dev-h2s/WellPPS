buildscript {
	ext {
		springBootVersion = '3.0.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}


subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = "org.wellnetworks"
	version = "1.0-SNAPSHOT"
	compileJava.options.encoding = 'UTF-8'
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'

		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		developmentOnly 'org.springframework.boot:spring-boot-devtools'
// slf4j & logback
		implementation('org.slf4j:jcl-over-slf4j')
		implementation('ch.qos.logback:logback-classic')
//파일 처리
		implementation 'commons-io:commons-io:2.6'
	}

	test {
		useJUnitPlatform()
	}
}

project (':well-core') {
	bootJar { enabled = false }
	jar { enabled = true }

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//		implementation 'org.springframework.security:spring-security-core:5.7.5'
		implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '9.2.0.jre8'
		runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
		implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
// slf4j & logback
		implementation('org.slf4j:jcl-over-slf4j')
		implementation('ch.qos.logback:logback-classic')
		compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

	}

}




project (':well-secure') {
	bootJar { enabled = false }
	jar { enabled = true }
	dependencies {
		implementation project (':well-core')
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.session:spring-session-core'
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
		testImplementation 'org.springframework.security:spring-security-test'
		compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
//		implementation 'com.example:library-name:version'
//		implementation ("org.springframework.security:spring-security-config:5.6.0") // anMatchers 사용으로추가
	}
}

project (':well-webapi') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project (':well-core')
//		implementation project (':well-secure')
//		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.session:spring-session-core'
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//		testImplementation 'org.springframework.security:spring-security-test'
	}

}

project (':well-chargeApi') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project (':well-core')
//		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.session:spring-session-core'
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//		testImplementation 'org.springframework.security:spring-security-test'
	}

}
